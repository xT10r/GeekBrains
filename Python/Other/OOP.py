# ООП
#
# Плюсы:
# - Повторное использование кода
# - Повышение читаемости и гибкости кода
# - Ускорение процесса поиска ошибок и их исправления
# - Повышение безопасности проекта
# - Простота модификации проекта
#
# Минусы:
# - Необходимость хорошего понимания предметной области
# - Необходимость хорошего представления структуры приложения
# - Сложность в разбиение проекта на классы
#
# Области видимости
# - локальные
# - глобальные
#
# Модификаторы доступа
# - Публичный/открытый (public)
# - Защищенный: ограниченный на уровне соглашения, не стоит обращаться вне класса (protected). Например _password
# - Приватный/закрытый (private)
